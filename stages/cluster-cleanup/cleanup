#!/bin/bash

pod() {

## Cloning oep-e2e-rancher repo
echo -e "\n************************ Cleaning up the cluster **************************************\n"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd oep-e2e-rancher && bash stages/cluster-cleanup/cleanup node '"'$master_name'"' '"'$worker1_name'"' '"'$worker2_name'"' '"'$worker3_name'"' '"'$SNAPSHOT_NAME'"' '"'$VM_PASS'"' '"'$VM_USER'"' '"'$VM1_IP'"' '"'$VM2_IP'"' '"'$VM3_IP'"' '"'$VM4_IP'"''
}

node() {

bash utils/pooling jobname:e2e-metrics
bash utils/e2e-cr jobname:cluster-cleanup jobphase:Running

master_name=$(echo $1)
worker1_name=$(echo $2)
worker2_name=$(echo $3)
worker3_name=$(echo $4)
SNAPSHOT_NAME=$(echo $5)
VM_PASS=$6
VM_USER=$7
VM1_IP=$8
VM2_IP=$9
VM3_IP=${10}
VM4_IP=${11}

##Cluster name
cluster=cluster-1
echo -e "\nCLUSTER_NAME: $cluster\n"

echo -e "\n[ Cloning Litmus repo ]------------------------------------------\n"
git clone https://github.com/mayadata-io/litmus.git

## Replace the VM names in csv file
sed -i -e "s/auto1/$master_name/g" \
-e "s/auto2/$worker1_name/g" \
-e "s/auto3/$worker2_name/g" \
-e "s/auto4/$worker3_name/g" litmus/k8s/on-prem/openshift-installer/vm_name.csv


## Replace the snapshot name and ESX ip in vars
sed -i -e 's/snapshot_name: "oc-cluster"/snapshot_name: "'$SNAPSHOT_NAME'"/g' \
-e 's/esx_ip: "10.12.1.1"/esx_ip: "10.42.1.1"/g' litmus/k8s/on-prem/openshift-installer/vars.yml

echo -e "\n[ Reverting the cluster ]----------------------------------------\n"
ansible-playbook litmus/k8s/on-prem/openshift-installer/revert_cluster_state.yml

## Add sleep so that the VM's are ready
sleep 10

echo -e "\n[ Rebooting the VM's ]-------------------------------------------\n"
echo "Rebooting VM : $VM1_IP"
sshpass -p $VM_PASS ssh $VM_USER@$VM1_IP 'reboot' > /dev/null 2>&1 &
sleep 5
echo "Rebooting VM : $VM2_IP"
sshpass -p $VM_PASS ssh $VM_USER@$VM2_IP 'reboot' > /dev/null 2>&1 &
sleep 5
echo "Rebooting VM : $VM3_IP"
sshpass -p $VM_PASS ssh $VM_USER@$VM3_IP 'reboot' > /dev/null 2>&1 &
sleep 5
echo "Rebooting VM : $VM4_IP"
sshpass -p $VM_PASS ssh $VM_USER@$VM4_IP 'reboot' > /dev/null 2>&1 &

# Wait for cluster2 to revert to its latest snapshot
echo -e "\nWaiting for cluster2 and cluster3 to revert to its latest snapshot\n"
sleep 250

## Removimg oep-e2e-rancher repo
echo -e "\n[ Removing oep-e2e-rancher repo ]--------------------------------\n"
cd  && rm -rf oep-e2e-rancher
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12}
else
  pod
fi
